Backpropagation
w1 = 0.31, w2 = 0.22, w3 = 0.16, w4 = 0.18, w5 = 0.24 and w6 = 0.17

Input : i1=2 i2=3

Hidden Layer Calculation:
h1 = i1.w1 + i2.w2 = 2*0.31 + 3*0.22 = 1.28
h2 = i1.w3 + i2.w4 = 2*0.16 + 3*0.18 = 0.86

Output Calculation
out = h1.w5 + h2.w6 = 1.28*0.24 + 0.86*0.17 = 0.198

Error Calculation
Error = 1/2(0.198 - 1)^2 =  0.322

Changing the weights using backpropagation in order to reduce the error:

delta = prediction - actual = 0.198 - 1 = -0.802 

*w6 = w6 - a(h2.delta) = 0.17 - 0.05(0.86*(-0.802)) = 0.17 + 0.05*0.86*0.802 = 0.2
*w5 = w5 - a(h1.delta) = 0.24 - 0.05(1.28*(-0.802)) = 0.24 + 0.05*1.28*0.802 = 0.29
*w4 = w4 - a(i2.delta.w6) = 0.18 - 0.05(3*(-0.802)*0.17) = 0.18 + 0.05*3*0.802*0.17 = 0.2
*w3 = w3 - a(i1.delta.w6) = 0.16 - 0.05(2*(-0.802)*0.17) = 0.16 + 0.05*2*0.802*0.17 = 0.17
*w2 = w2 - a(i2.delta.w5) = 0.22 - 0.05(3*(-0.802)*0.24) = 0.22 + 0.05*3*0.802*0.24 = 0.25
*w1 = w1 - a(i1.delta.w5) = 0.31 - 0.05(2*(-0.802)*0.24) = 0.31 + 0.05*2*0.802*0.24 = 0.33

"a" is the learning rate which is manually guessed. here it is 0.05

Calculation of output using the new weights:
Hidden Layer Calculation:
h1 = i1.w1 + i2.w2 = 2*0.33 + 3*0.25 = 1.41
h2 = i1.w3 + i2.w4 = 2*0.17 + 3*0.2 = 0.94

Output Calculation
out = h1.w5 + h2.w6 = 1.41*0.29 + 0.94*0.2 = 0.27

Error Calculation
Error = 1/2(0.27 - 1)^2 =  0.266
